#include <behaviors/mouse_key_press.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <
&kp ESCAPE      &kp Q         &kp W         &kp E          &kp R          &kp T            &kp Y          &kp U          &kp I          &kp O         &kp P            &caps_word
&kp LANGUAGE_1  &u_mt LGUI A  &u_mt LALT S  &u_mt LCTRL D  &u_mt LSHFT F  &kp G            &kp H          &u_mt LSHFT J  &u_mt LCTRL K  &u_mt LALT L  &u_mt LGUI SEMI  &kp SINGLE_QUOTE
&mo 5           &kp Z         &kp X         &kp C          &kp V          &kp B            &kp N          &kp M          &kp COMMA      &kp DOT       &kp SLASH        &kp BACKSLASH
                                            &u_lt 4 ESC    &u_lt 1 TAB    &u_lt 2 ENTER    &u_lt 3 SPACE  &u_lt 1 BSPC   &u_lt 4 DEL
            >;
        };

        NAV {
            display-name = "Nav";
            bindings = <
&none          &bootloader  &none     &none      &none      &none    &kp C_MUTE      &kp C_VOL_DN   &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE
&kp CAPS       &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp LEFT_ARROW  &kp DOWN       &kp UP        &kp RIGHT   &none       &none
&kp LS(LC(Z))  &kp LC(Z)    &kp RALT  &kp LC(C)  &kp LC(V)  &none    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &none       &none
                                      &none      &none      &none    &none           &none          &none
            >;
        };

        NUM {
            display-name = "Num";
            bindings = <
&none  &none     &none     &none      &none      &none    &none         &kp N7  &kp N8   &kp N9  &kp KP_MULTIPLY  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp KP_MINUS  &kp N4  &kp N5   &kp N6  &kp KP_PLUS      &none
&none  &none     &none     &none      &none      &none    &none         &kp N1  &kp N2   &kp N3  &kp KP_DIVIDE    &kp KP_ENTER
                           &none      &none      &none    &none         &kp N0  &kp DOT
            >;
        };

        SYM {
            display-name = "Sym";
            bindings = <
&kp TILDE  &kp PERCENT  &kp ASTRK      &kp MINUS  &kp PLUS          &kp LPAR            &kp RIGHT_PARENTHESIS  &none         &none      &none     &none     &none
&kp GRAVE  &kp AT_SIGN  &kp LESS_THAN  &kp EQUAL  &kp GREATER_THAN  &kp LEFT_BRACE      &kp RIGHT_BRACE        &kp LSHFT     &kp LCTRL  &kp LALT  &kp LGUI  &none
&kp POUND  &kp CARET    &kp AMPERSAND  &kp PIPE   &kp EXCL          &kp LEFT_BRACKET    &kp RIGHT_BRACKET      &none         &none      &kp RALT  &none     &none
                                       &kp DLLR   &kp UNDER         &kp COLON           &none                  &kp QUESTION  &none
            >;
        };

        FUN {
            display-name = "Fun";
            bindings = <
&kp F1                    &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &none  &none      &none      &none     &none     &none
&kp F7                    &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&u_screen_capture_select  &none   &none   &none    &none    &none      &none  &none      &none      &none     &none     &soft_off
                                          &none    &none    &none      &none  &none      &none
            >;

            label = "Function";
        };

        BT {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans      &trans  &trans
            >;

            label = "BT";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        b_key_from_right {
            bindings = <&kp B>;
            key-positions = <30 31>;
        };

        left_boot_loader {
            bindings = <&bootloader>;
            key-positions = <24 5>;
        };

        right_boot_loader {
            bindings = <&bootloader>;
            key-positions = <6 35>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_0: u_macro_u_bt_sel_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_u_bt_sel_1: u_macro_u_bt_sel_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_u_bt_sel_2: u_macro_u_bt_sel_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_u_bt_sel_3: u_macro_u_bt_sel_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_u_bt_sel_4: u_macro_u_bt_sel_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
    };
};

/ {
    macros {
    };
};

/ {
    macros {
        u_screen_capture_select: u_screen_capture_select {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1 &kp B>;
            label = "U_SCREEN_CAPTURE_SELECT";
        };
    };
};

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };
};
